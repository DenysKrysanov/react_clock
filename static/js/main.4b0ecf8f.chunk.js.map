{"version":3,"sources":["Clock.tsx","App.tsx","index.tsx"],"names":["getFormattedTime","date","toUTCString","slice","Clock","state","currentTime","Date","intervalId","handleUpdateTime","now","setState","window","console","info","this","setInterval","prevProps","previousName","name","currentName","props","debug","clearInterval","className","Component","getRandomName","value","toString","App","hasClock","clockName","timerId","handleChangeName","handleRightClick","event","preventDefault","handleLeftClick","document","addEventListener","removeEventListener","ReactDOM","render","getElementById"],"mappings":"6MAUA,SAASA,EAAiBC,GACxB,OAAOA,EAAKC,cAAcC,OAAO,IAAK,GAGjC,IAAMC,EAAb,4MACEC,MAAyB,CACvBC,YAAaN,EAAiB,IAAIO,OAFtC,EAKEC,WAAa,EALf,EAwBEC,iBAAmB,WACjB,IAAMC,EAAMV,EAAiB,IAAIO,MAEjC,EAAKI,SAAS,CACZL,YAAaI,IAGfE,OAAOC,QAAQC,KAAKJ,IA/BxB,uDAOE,WACEK,KAAKP,WAAaI,OAAOI,YAAYD,KAAKN,iBAAkB,OARhE,gCAWE,SAAmBQ,GACjB,IAAMC,EAAeD,EAAUE,KACzBC,EAAcL,KAAKM,MAAMF,KAE3BD,IAAiBE,GACnBR,OAAOC,QAAQS,MAAf,uBAAqCJ,EAArC,eAAwDE,MAhB9D,kCAoBE,WACER,OAAOW,cAAcR,KAAKP,cArB9B,oBAkCE,WACE,IAAQW,EAASJ,KAAKM,MAAdF,KACAb,EAAgBS,KAAKV,MAArBC,YAER,OACE,sBAAKkB,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGL,IAGF,YAED,sBAAMK,UAAU,cAAhB,SACGlB,WA/CX,GAA2BmB,aCV3B,SAASC,IACP,IAAMC,EAAQpB,KAAKG,MAAMkB,WAAWzB,OAAO,GAE3C,MAAM,SAAN,OAAgBwB,GAQX,IAAME,EAAb,4MACExB,MAAQ,CACNyB,UAAU,EACVC,UAAW,WAHf,EAMEC,QAAU,EANZ,EAqBEC,iBAAmB,WACjB,EAAKtB,SAAS,CACZoB,UAAWL,OAvBjB,EA2BEQ,iBAAmB,SAACC,GAClBA,EAAMC,iBAEN,EAAKzB,SAAS,CACZmB,UAAU,KA/BhB,EAmCEO,gBAAkB,WAChB,EAAK1B,SAAS,CACZmB,UAAU,KArChB,uDAQE,WACEf,KAAKiB,QAAUpB,OAAOI,YAAYD,KAAKkB,iBAAkB,MAEzDK,SAASC,iBAAiB,QAASxB,KAAKsB,iBACxCC,SAASC,iBAAiB,cAAexB,KAAKmB,oBAZlD,kCAeE,WACEtB,OAAOW,cAAcR,KAAKiB,SAC1BM,SAASE,oBAAoB,QAASzB,KAAKsB,iBAC3CC,SAASE,oBAAoB,cAAezB,KAAKmB,oBAlBrD,oBAyCE,WACE,MAAgCnB,KAAKV,MAA7B0B,EAAR,EAAQA,UAAWD,EAAnB,EAAmBA,SAEnB,OACE,sBAAKN,UAAU,MAAf,UAEE,6CAECM,GAAY,cAAC,EAAD,CAAOX,KAAMY,WAjDlC,GAAyBN,aCZzBgB,IAASC,OACP,cAAC,EAAD,IACAJ,SAASK,eAAe,W","file":"static/js/main.4b0ecf8f.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype State = {\n  currentTime: string;\n};\n\ntype Props = {\n  name: string;\n};\n\nfunction getFormattedTime(date: Date) {\n  return date.toUTCString().slice(-12, -4);\n}\n\nexport class Clock extends Component<Props, State> {\n  state: Readonly<State> = {\n    currentTime: getFormattedTime(new Date()),\n  };\n\n  intervalId = 0;\n\n  componentDidMount(): void {\n    this.intervalId = window.setInterval(this.handleUpdateTime, 1000);\n  }\n\n  componentDidUpdate(prevProps: Readonly<Props>): void {\n    const previousName = prevProps.name;\n    const currentName = this.props.name;\n\n    if (previousName !== currentName) {\n      window.console.debug(`Renamed from ${previousName} to ${currentName}`);\n    }\n  }\n\n  componentWillUnmount(): void {\n    window.clearInterval(this.intervalId);\n  }\n\n  handleUpdateTime = () => {\n    const now = getFormattedTime(new Date());\n\n    this.setState({\n      currentTime: now,\n    });\n\n    window.console.info(now);\n  };\n\n  render() {\n    const { name } = this.props;\n    const { currentTime } = this.state;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {name}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {currentTime}\n        </span>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport './App.scss';\nimport { Clock } from './Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  hasClock: boolean;\n  clockName: string;\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  timerId = 0;\n\n  componentDidMount(): void {\n    this.timerId = window.setInterval(this.handleChangeName, 3300);\n\n    document.addEventListener('click', this.handleLeftClick);\n    document.addEventListener('contextmenu', this.handleRightClick);\n  }\n\n  componentWillUnmount(): void {\n    window.clearInterval(this.timerId);\n    document.removeEventListener('click', this.handleLeftClick);\n    document.removeEventListener('contextmenu', this.handleRightClick);\n  }\n\n  handleChangeName = () => {\n    this.setState({\n      clockName: getRandomName(),\n    });\n  };\n\n  handleRightClick = (event: MouseEvent) => {\n    event.preventDefault();\n\n    this.setState({\n      hasClock: false,\n    });\n  };\n\n  handleLeftClick = () => {\n    this.setState({\n      hasClock: true,\n    });\n  };\n\n  render() {\n    const { clockName, hasClock } = this.state;\n\n    return (\n      <div className=\"App\">\n\n        <h1>React clock</h1>\n\n        {hasClock && <Clock name={clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}